{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/vighnesh/Documents/code-repos/penny-ai-agent-demo/web-frontend/pages/index.js"],"sourcesContent":["// web-frontend/pages/index.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Input, Button, List, Typography, Space, Flex, message, Avatar } from 'antd'; // Import Avatar\nimport Head from 'next/head';\n\nconst { TextArea } = Input;\nconst { Text } = Typography;\n\n// --- Paths to Assets ---\nconst PENNY_LOADING_GIF_PATH = '/spinner.gif';\nconst BACKGROUND_IMAGE_PATH = '/background-image.jpg';\nconst HEADER_BACKGROUND_IMAGE_PATH = '/header-bg.svg'; // Using .svg as discussed\nconst PENNY_AVATAR_PATH = '/penny-avatar.jpg'; // <-- NEW: Path for Penny's avatar image\n\n// --- Color Palette ---\nconst COLORS = {\n    darkRed: '#9E1F14',\n    brightRed: '#BB271A',\n    darkGrey: '#141414',\n    white: '#FFFFFF',\n    lightGrey: '#f0f2f5',\n    lightBlue: '#e6f7ff',\n    borderGrey: '#ddd',\n    textBlue: '#1890ff',\n    textGreen: '#52c41a',\n    onlineGreen: '#52c41a', // Specific green for online indicator\n};\n\nconst Home = () => {\n    const [messageHistory, setMessageHistory] = useState([]);\n    const [inputValue, setInputValue] = useState('');\n    const [isConnected, setIsConnected] = useState(false);\n    const wsRef = useRef(null);\n    const userId = \"user123\";\n    const messagesEndRef = useRef(null);\n\n    const [isLoadingResponse, setIsLoadingResponse] = useState(false);\n\n    useEffect(() => {\n        if (messagesEndRef.current) {\n            messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n        }\n    }, [messageHistory, isLoadingResponse]);\n\n    useEffect(() => {\n        const connectWebSocket = () => {\n            const ws = new WebSocket(`ws://localhost:8001/ws?user_id=${userId}`);\n            ws.onopen = () => {\n                console.log('WebSocket Connected');\n                setIsConnected(true);\n                message.success('Connected to Penny Agent!');\n            };\n            ws.onmessage = (event) => {\n                const data = JSON.parse(event.data);\n                if (data.type === 'agent_message') {\n                    setMessageHistory((prev) => [...prev, { type: 'agent', content: data.content }]);\n                    setIsLoadingResponse(false);\n                } else if (data.type === 'error') {\n                    message.error(`Agent Error: ${data.content}`);\n                    setIsLoadingResponse(false);\n                }\n            };\n            ws.onclose = () => {\n                console.log('WebSocket Disconnected');\n                setIsConnected(false);\n                message.info('Disconnected from Penny Agent. Attempting to reconnect...');\n                setIsLoadingResponse(false);\n                setTimeout(connectWebSocket, 3000);\n            };\n            ws.onerror = (error) => {\n                console.error('WebSocket Error:', error);\n                message.error('WebSocket connection error!');\n                ws.close();\n            };\n            wsRef.current = ws;\n        };\n\n        connectWebSocket();\n\n        return () => {\n            if (wsRef.current) {\n                wsRef.current.close();\n            }\n        };\n    }, []);\n\n    const sendMessage = () => {\n        if (wsRef.current && isConnected && inputValue.trim()) {\n            const userMessage = inputValue.trim();\n            setMessageHistory((prev) => [...prev, { type: 'user', content: userMessage }]);\n            wsRef.current.send(userMessage);\n            setInputValue('');\n            setIsLoadingResponse(true);\n        } else if (!isConnected) {\n            console.log('Not connected, cannot send message.');\n            message.warning('Not connected to the agent. Please wait for connection.');\n        }\n    };\n\n    return (\n        <Flex\n            vertical\n            style={{\n                minHeight: '100vh',\n                justifyContent: 'center',\n                alignItems: 'center',\n                padding: '20px',\n                backgroundImage: `url(${BACKGROUND_IMAGE_PATH})`,\n                backgroundSize: 'cover',\n                backgroundPosition: 'center',\n                backgroundRepeat: 'no-repeat',\n                backgroundAttachment: 'fixed',\n                position: 'relative',\n            }}\n        >\n            <Head>\n                <title>Penny AI Agent Demo</title>\n            </Head>\n\n            {/* Dark Glassy Transparent Overlay (THE EFFECT) */}\n            <div style={{\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                backgroundColor: 'rgba(0, 0, 0, 0.4)',\n                backdropFilter: 'blur(8px) saturate(150%)',\n                WebkitBackdropFilter: 'blur(8px) saturate(150%)',\n                zIndex: 1,\n            }} />\n\n            {/* Main Chat Interface Container (Background is WHITE) */}\n            <div style={{\n                position: 'relative',\n                zIndex: 2,\n                width: '100%',\n                maxWidth: '800px',\n                height: 'calc(100vh - 40px)',\n                display: 'flex',\n                flexDirection: 'column',\n                borderRadius: '12px',\n                overflow: 'hidden',\n                boxShadow: '0 4px 20px rgba(0,0,0,0.1)',\n                backgroundColor: COLORS.white,\n            }}>\n                {/* Chat Interface Header */}\n                <Flex\n                    align=\"center\" // Align items vertically in the center\n                    justify=\"center\" // Center content horizontally within the Flex\n                    style={{\n                        padding: '16px',\n                        backgroundImage: `url(${HEADER_BACKGROUND_IMAGE_PATH})`,\n                        backgroundSize: 'cover',\n                        backgroundPosition: 'center',\n                        backgroundRepeat: 'no-repeat',\n                        borderBottom: `1px solid ${COLORS.borderGrey}`,\n                        borderRadius: '12px 12px 0 0',\n                        gap: '10px', // Space between avatar and title\n                    }}\n                >\n                    {/* Penny's Avatar with Online Indicator */}\n                    <div style={{ position: 'relative' }}>\n                        <Avatar size={50} src={PENNY_AVATAR_PATH} /> {/* Penny's circular avatar */}\n                        {isConnected && ( // Show green dot only if connected\n                            <div style={{\n                                position: 'absolute',\n                                bottom: 0,\n                                right: 0,\n                                width: '12px',\n                                height: '12px',\n                                borderRadius: '50%',\n                                backgroundColor: COLORS.onlineGreen,\n                                border: `2px solid ${COLORS.white}`, // White border for visibility\n                            }} />\n                        )}\n                    </div>\n                    {/* Header Title */}\n                    <Typography.Title\n                        level={3}\n                        style={{\n                            margin: '0', // Remove default margin from Ant Design Title\n                            fontWeight: 'bold',\n                            letterSpacing: '2px',\n                            color: COLORS.white,\n                            textShadow: '1px 1px 2px rgba(0,0,0,0.5)',\n                            textTransform: 'uppercase',\n                        }}\n                    >\n                        PENNY\n                    </Typography.Title>\n                </Flex>\n\n                {/* Message List */}\n                <List\n                    style={{ flexGrow: 1, overflowY: 'auto', padding: '16px', borderBottom: `1px solid ${COLORS.borderGrey}` }}\n                    dataSource={messageHistory}\n                    renderItem={(item) => (\n                        <List.Item\n                            style={{\n                                justifyContent: item.type === 'user' ? 'flex-end' : 'flex-start',\n                                padding: '8px 0',\n                                borderBottom: 'none'\n                            }}\n                        >\n                            <div\n                                style={{\n                                    backgroundColor: item.type === 'user' ? COLORS.lightGrey : COLORS.lightBlue,\n                                    borderRadius: '8px',\n                                    padding: '10px 15px',\n                                    maxWidth: '80%',\n                                    wordWrap: 'break-word',\n                                    boxShadow: '0 1px 4px rgba(0,0,0,0.05)',\n                                }}\n                            >\n                                <Text strong style={{ color: item.type === 'user' ? COLORS.textBlue : COLORS.brightRed }}>\n                                    {item.type === 'user' ? 'You' : 'Penny'}:\n                                </Text>\n                                <br />\n                                <Text>{item.content}</Text>\n                            </div>\n                        </List.Item>\n                    )}\n                />\n\n                {/* Loading indicator */}\n                {isLoadingResponse && (\n                    <div style={{ padding: '8px 16px', display: 'flex', justifyContent: 'flex-start' }}>\n                        <div\n                            style={{\n                                backgroundColor: COLORS.lightBlue,\n                                borderRadius: '8px',\n                                padding: '10px 15px',\n                                maxWidth: '80%',\n                                boxShadow: '0 1px 4px rgba(0,0,0,0.05)',\n                                display: 'flex',\n                                alignItems: 'center'\n                            }}\n                        >\n                            <Text strong style={{ color: COLORS.brightRed }}>Penny:</Text>\n                            <img src={PENNY_LOADING_GIF_PATH} alt=\"One moment...\" style={{ width: '30px', height: '30px', marginLeft: '8px' }} />\n                        </div>\n                    </div>\n                )}\n                <div ref={messagesEndRef} />\n\n                {/* Input Area */}\n                <Space.Compact\n                    style={{\n                        width: '100%',\n                        padding: '16px',\n                        borderTop: `1px solid ${COLORS.borderGrey}`,\n                        borderRadius: '0 0 12px 12px',\n                        backgroundColor: COLORS.white,\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: '10px',\n                        flexShrink: 0,\n                    }}\n                >\n                    <TextArea\n                        rows={3}\n                        value={inputValue}\n                        onChange={(e) => setInputValue(e.target.value)}\n                        placeholder={isConnected ? \"Type your message...\" : \"Connecting to agent...\"}\n                        onPressEnter={(e) => {\n                            if (!e.shiftKey) {\n                                e.preventDefault();\n                                sendMessage();\n                            }\n                        }}\n                        disabled={!isConnected || isLoadingResponse}\n                        style={{\n                            flexGrow: 1,\n                            flexShrink: 1,\n                            flexBasis: 'auto',\n                            minWidth: '0',\n                            marginRight: '0px',\n                            borderRadius: '8px',\n                            backgroundColor: COLORS.white,\n                            color: COLORS.darkGrey,\n                            border: `1px solid ${COLORS.borderGrey}`,\n                        }}\n                    />\n                    <Button\n                        type=\"primary\"\n                        onClick={sendMessage}\n                        disabled={!isConnected || isLoadingResponse}\n                        style={{\n                            height: 'auto',\n                            padding: '10px 20px',\n                            borderRadius: '8px',\n                            backgroundColor: COLORS.brightRed,\n                            borderColor: COLORS.brightRed,\n                            color: COLORS.white,\n                            flexShrink: 0,\n                        }}\n                    >\n                        Send\n                    </Button>\n                </Space.Compact>\n            </div>\n        </Flex>\n    );\n};\n\nexport default Home;"],"names":[],"mappings":"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","debugId":null}}]
}